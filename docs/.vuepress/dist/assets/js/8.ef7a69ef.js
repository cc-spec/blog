(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{443:function(t,a,s){t.exports=s.p+"assets/img/scope.c2d5d8e7.png"},474:function(t,a,s){"use strict";s.r(a);var r=s(25),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"开始之前"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开始之前"}},[t._v("#")]),t._v(" 开始之前")]),t._v(" "),r("h3",{attrs:{id:"_1-程序的执行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-程序的执行过程"}},[t._v("#")]),t._v(" 1. 程序的执行过程？")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("分词/词法分析")]),t._v("：将代码切割成一块一块的词法单元，比如：var a = 2就会被切割成 var、a、=、2")]),t._v(" "),r("li",[r("strong",[t._v("解析/语法生成")]),t._v("：将词法单元转换成AST（机器指令），也就是抽象语法树")]),t._v(" "),r("li",[r("strong",[t._v("代码生成")]),t._v("：把AST转换为可执行代码")])]),t._v(" "),r("h3",{attrs:{id:"_2-谁来做这些事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-谁来做这些事"}},[t._v("#")]),t._v(" 2. 谁来做这些事？")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("引擎")]),t._v("：负责代码的编译和执行")]),t._v(" "),r("li",[r("strong",[t._v("编译器")]),t._v("：负责语法分析和代码生成")]),t._v(" "),r("li",[r("strong",[t._v("作用域")]),t._v("：负责收集和维护标识符（变量、函数等）的查询规则")])]),t._v(" "),r("h3",{attrs:{id:"_3-引用《你不知道的js上》"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-引用《你不知道的js上》"}},[t._v("#")]),t._v(" 3. 引用《你不知道的js上》")]),t._v(" "),r("p",[r("img",{attrs:{src:s(443),alt:""}})]),t._v(" "),r("h2",{attrs:{id:"一、作用域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、作用域"}},[t._v("#")]),t._v(" 一、作用域")]),t._v(" "),r("h3",{attrs:{id:"_1-什么是作用域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是作用域"}},[t._v("#")]),t._v(" 1. 什么是作用域？")]),t._v(" "),r("ul",[r("li",[t._v("一套确定在何处以及如何查找变量的规则\n"),r("ul",[r("li",[t._v("以=为界，左边为容器，右边为值")]),t._v(" "),r("li",[r("strong",[t._v("LHS")]),t._v("：根据值找容器，如变量赋值")]),t._v(" "),r("li",[r("strong",[t._v("RHS")]),t._v("：根据容器找值，如调用函数，使用变量")])])])]),t._v(" "),r("h3",{attrs:{id:"_2-作用域分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-作用域分类"}},[t._v("#")]),t._v(" 2. 作用域分类？")]),t._v(" "),r("ul",[r("li",[t._v("词法作用域：由代码书写位置决定")])]),t._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1️⃣全局作用域，有一个标识符：foo")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2️⃣foo的作用域，有三个标识符：a，b，bar")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3️⃣bar的作用域，有一个标识符：c")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("ul",[r("li",[t._v("全局作用域：作用域的最顶端")]),t._v(" "),r("li",[t._v("函数作用域：由函数开始的词法作用域，如foo，bar创造的标识符都只能在本函数或本函数的下级作用域中使用")]),t._v(" "),r("li",[t._v("块级作用域（es6新增）：由{}包裹的词法作用域\n"),r("ul",[r("li",[t._v("注意：if、for后面跟的{}不能看作代码块，使用var声明的变量由于变量提升在作用域的上级作用域仍然可以访问")])])])]),t._v(" "),r("div",{staticClass:"language-javascript extra-class"},[r("pre",{pre:!0,attrs:{class:"language-javascript"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局作用域中仍然能访问到bar")]),t._v("\n")])])]),r("h3",{attrs:{id:"_3-什么是作用域链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是作用域链"}},[t._v("#")]),t._v(" 3. 什么是作用域链？")]),t._v(" "),r("ul",[r("li",[t._v("查询变量会首先在自己的作用域中查找，如果没有查找到，回再向上一级查找，查找过程形成的链条就是作用域链")])]),t._v(" "),r("h2",{attrs:{id:"二、作用域引发的异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、作用域引发的异常"}},[t._v("#")]),t._v(" 二、作用域引发的异常")]),t._v(" "),r("h3",{attrs:{id:"_1-referenceerror"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-referenceerror"}},[t._v("#")]),t._v(" 1. ReferenceError")]),t._v(" "),r("ul",[r("li",[t._v("解释：引用错误")]),t._v(" "),r("li",[t._v("原因：\n"),r("ul",[r("li",[t._v("①RHS在整条作用域链中没有查找到这个变量的值")]),t._v(" "),r("li",[t._v("②LHS在整条作用域链中没有查找到目标变量，严格状态下会抛出ReferenceError，非严格状态会自动创建一个变量")])])])]),t._v(" "),r("h3",{attrs:{id:"_2-typeerror"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-typeerror"}},[t._v("#")]),t._v(" 2. TypeError")]),t._v(" "),r("ul",[r("li",[t._v("解释：类型错误")]),t._v(" "),r("li",[t._v("原因：RHS查询到了，但是企图对这个变量进行一些不允许的操作，比如引用undefined的属性")])]),t._v(" "),r("h3",{attrs:{id:"_3-两者区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-两者区别"}},[t._v("#")]),t._v(" 3. 两者区别")]),t._v(" "),r("ul",[r("li",[t._v("ReferenceError：作用域判别失败")]),t._v(" "),r("li",[t._v("TypeError：作用域判别成功，但是违规操作")])]),t._v(" "),r("h2",{attrs:{id:"三、提升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、提升"}},[t._v("#")]),t._v(" 三、提升")]),t._v(" "),r("h3",{attrs:{id:"_1-什么是提升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是提升"}},[t._v("#")]),t._v(" 1. 什么是提升？")]),t._v(" "),r("ul",[r("li",[t._v("现有声明，后有赋值，编译器会把所有的声明提升到所在作用域的顶部")])]),t._v(" "),r("h3",{attrs:{id:"_2-哪些声明-函数和变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-哪些声明-函数和变量"}},[t._v("#")]),t._v(" 2. 哪些声明？（函数和变量）")]),t._v(" "),r("ul",[r("li",[t._v("先提函数，后提变量")]),t._v(" "),r("li",[t._v("函数声明会被提升，函数表达式不会\n"),r("ul",[r("li",[t._v("函数声明：function是声明中的第一个词")]),t._v(" "),r("li",[t._v("函数表达式：不由function开始")])])])]),t._v(" "),r("h3",{attrs:{id:"_3-新增声明方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-新增声明方式"}},[t._v("#")]),t._v(" 3. 新增声明方式")]),t._v(" "),r("ul",[r("li",[t._v("es6新增了let和const替代var，他们"),r("strong",[t._v("不可以重复声明")]),t._v("且"),r("strong",[t._v("不会提升")]),t._v(" "),r("ul",[r("li",[t._v("let：声明变量，替代var")]),t._v(" "),r("li",[t._v("const：声明常量，值不可变，但是如果是个对象，则是引用不可变，存的值可以修改")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);